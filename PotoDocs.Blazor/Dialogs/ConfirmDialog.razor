@using Blazored.Modal
@using Blazored.Modal.Services

<BlazoredModalInstance Options="new ModalOptions { HideCloseButton = true, DisableBackgroundCancel = true }">
    <Content>
        <div class="modal-header">
            <h5 class="modal-title">Potwierdzenie</h5>
        </div>
        <div class="modal-body">
            <p>@Message</p>
        </div>
        <div class="modal-footer">
            <button class="btn btn-danger" @onclick="Confirm">Tak, usuń</button>
            <button class="btn btn-secondary" @onclick="Cancel">Anuluj</button>
        </div>
    </Content>
</BlazoredModalInstance>

@code {
    [CascadingParameter] public BlazoredModalInstance ModalInstance { get; set; } = default!;
    [Parameter] public string Message { get; set; } = "Czy na pewno chcesz wykonać tę akcję?";

    private async Task Confirm()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok(true));
    }

    private async Task Cancel()
    {
        await ModalInstance.CancelAsync();
    }
}
